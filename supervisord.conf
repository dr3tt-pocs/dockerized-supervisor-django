[supervisord]
nodaemon=true
logfile=/dev/null
logfile_maxbytes=0
user=root

# [program:app]
# stdout_logfile=/dev/fd/1
# stdout_logfile_maxbytes=0
# redirect_stderr=true

[program:gunicorn]
command=gunicorn --workers 2 --timeout 600 --threads 2 --bind 0.0.0.0:%(ENV_PORT)s fooproject.wsgi
directory=/app
user=root
process_name=root
numprocs=1
autostart=true
autorestart=true
redirect_stderr=True

[program:redis]
command=redis-server
stdout_logfile=/var/log/redis/info.log
stderr_logfile=/var/log/redis/error.log
autostart=true
autorestart=true

[program:celery]
; Directory should become before command
directory=/app

user=nobody
numprocs=1
# stdout_logfile=/var/log/celery/worker.log
# stderr_logfile=/var/log/celery/error.log
# redirect_stdout=True
redirect_stderr=true
stdout_logfile=/dev/fd/1
stdout_logfile_maxbytes=0
autostart=true
autorestart=true
startsecs=10

; Set full path to celery program if using virtualenv
command=celery -A fooproject worker --loglevel=INFO

; Alternatively,
;command=celery --app=your_app.celery:app worker --loglevel=INFO -n worker.%%h
; Or run a script
;command=celery.sh

; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs = 600

; Causes supervisor to send the termination signal (SIGTERM) to the whole process group.
stopasgroup=true

; Set Celery priority higher than default (999)
; so, if rabbitmq is supervised, it will start first.
priority=1000

[program:celery-beat]
; Directory should become before command
directory=/app

user=nobody
numprocs=1
redirect_stderr=true
stdout_logfile=/dev/fd/1
stdout_logfile_maxbytes=0
autostart=true
autorestart=true
startsecs=10

; Set full path to celery program if using virtualenv
command=celery -A fooproject beat --loglevel=INFO

; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs = 600

; Causes supervisor to send the termination signal (SIGTERM) to the whole process group.
stopasgroup=true

; Set Celery priority higher than default (999)
; so, if rabbitmq is supervised, it will start first.
priority=1000